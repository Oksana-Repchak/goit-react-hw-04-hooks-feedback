{"version":3,"sources":["components/Section/Section.jsx","components/Feedback/Feedback.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js","components/Feedback/Feedback.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","s","list","map","option","onClick","button","name","shortid","generate","Statistics","good","neutral","bad","total","positivePercentage","statisticList","Notification","message","notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","item","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+OAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,6BAAKD,IACJC,K,oCCFQ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,oBAAIC,UAAWC,IAAEC,KAAjB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,6BACE,wBACEC,QAAS,kBAAMN,EAAgBK,IAC/BJ,UAAWC,IAAEK,OACbC,KAAMH,EAHR,SAKGA,KANII,IAAQC,iB,oBCLV,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAIf,UAAWC,IAAEe,cAAjB,UACE,6BACE,uCAAUL,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oDAAuBC,EAAvB,Y,oBCtBO,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGlB,UAAWC,IAAEkB,aAAhB,SAA+BD,ICEzB,SAASE,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBV,EADqB,KACfW,EADe,OAEED,mBAAS,GAFX,mBAErBT,EAFqB,KAEZW,EAFY,OAGNF,mBAAS,GAHH,mBAGrBR,EAHqB,KAGhBW,EAHgB,KAqBtBC,EAAqB,WACzB,OAAOd,EAAOC,EAAUC,GAO1B,OACE,gCACE,cAACnB,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA7BgB,SAAA2B,GACtB,OAAQA,GACN,IAAK,OACH,OAAOJ,EAAQX,EAAO,GAExB,IAAK,UACH,OAAOY,EAAWX,EAAU,GAE9B,IAAK,MACH,OAAOY,EAAOX,EAAM,GAEtB,QACE,aAoBF,cAACnB,EAAD,CAASC,MAAM,aAAf,SAC4B,IAAzB8B,IACC,cAACR,EAAD,CAAcC,QAAQ,sBAEtB,cAACR,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,IACPV,mBApBDY,KAAKC,MAAc,IAAPjB,EAAcc,YC3BrCI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACX,EAAD,MAEFY,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,2B,kBCAzDD,EAAOC,QAAU,CAAC,cAAgB,oC,kBCAlCD,EAAOC,QAAU,CAAC,aAAe,sC","file":"static/js/main.520551e8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './Feedback.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ul className={s.list}>\n      {options.map(option => (\n        <li key={shortid.generate()}>\n          <button\n            onClick={() => onLeaveFeedback(option)}\n            className={s.button}\n            name={option}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul className={s.statisticList}>\n      <li>\n        <p>Good: {good}</p>\n      </li>\n      <li>\n        <p>Neutral: {neutral}</p>\n      </li>\n      <li>\n        <p>Bad: {bad}</p>\n      </li>\n      <li>\n        <p>Total: {total}</p>\n      </li>\n      <li>\n        <p>Positive feedback: {positivePercentage}%</p>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.notification}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\r\nimport Section from './components/Section';\r\nimport Feedback from './components/Feedback';\r\nimport Statistics from './components/Statistics';\r\nimport Notification from './components/Notification';\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const clickActiveItem = item => {\r\n    switch (item) {\r\n      case 'good':\r\n        return setGood(good + 1);\r\n\r\n      case 'neutral':\r\n        return setNeutral(neutral + 1);\r\n\r\n      case 'bad':\r\n        return setBad(bad + 1);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return Math.round((good * 100) / countTotalFeedback());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Section title=\"Please leave feedback\">\r\n        <Feedback\r\n          options={['good', 'neutral', 'bad']}\r\n          onLeaveFeedback={clickActiveItem}\r\n        />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback() === 0 ? (\r\n          <Notification message=\"No feedback given\"></Notification>\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__3xiuj\",\"button\":\"Feedback_button__3b_n0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__IecCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1UmXC\"};"],"sourceRoot":""}